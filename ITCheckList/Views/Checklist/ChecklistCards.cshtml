@using ITCheckList.Extentions
@model List<ITCheckList.Models.TBL_CheckItem>
@{
    ViewData["Title"] = "لیست بررسی‌های روزانه";
    var hasUnarchivedOldData = ViewBag.HasUnarchivedOldData ?? false;
    var successMessage = TempData["SuccessMessage"] as string;
}

<!-- ✅ پیام موفقیت -->
@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        Toastify({
            text: "@successMessage",
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "#4CAF50",
            close: true
        }).showToast();
    </script>
}

<!-- ✅ هشدار بایگانی‌نشدن اطلاعات قدیمی -->
@if (hasUnarchivedOldData)
{
    <div class="alert alert-warning text-center mt-4">
        <strong>توجه:</strong> اطلاعات 1 تا 3 روز گذشته هنوز بایگانی نشده‌اند.
    </div>
    <div class="text-center mt-3">
        <button id="archiveOldDataBtn" class="btn btn-primary">بایگانی اطلاعات قدیمی</button>
    </div>
}

<!-- ✅ ابزارها -->
<div class="d-flex justify-content-between align-items-center flex-wrap gap-3 my-4" dir="rtl">
    <button id="btnAdd" class="btn btn-primary">افزودن موضوع جدید</button>
    <p class="mb-0">تاریخ امروز: <span id="shamsiDate" class="fw-bold"></span></p>
</div>

<!-- ✅ کارت‌ها -->
<div id="checklistCards">
    @await Html.PartialAsync("_ChecklistCards", Model)
</div>

<!-- ✅ دکمه‌های بایگانی / چاپ -->
<div class="mt-4 d-flex flex-wrap gap-2">
    <button id="btnArchiveToday" class="btn btn-outline-primary">ارسال گزارشات به بایگانی امروز</button>
    <button id="btnPrintTable" class="btn btn-outline-secondary">دریافت خروجی از اطلاعات</button>
</div>

<!-- ✅ مودال فرم -->
<div class="modal fade" id="modalForm" tabindex="-1" data-bs-backdrop="static" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg" dir="rtl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold">فرم</h5>
                <button type="button" class="btn-close ms-0" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- محتوای فرم به صورت Ajax لود می‌شود -->
            </div>
        </div>
    </div>
</div>

<!-- ✅ قفل سیستم اگر اطلاعات قدیمی بایگانی نشده -->
@if (hasUnarchivedOldData)
{
    <div id="overlay-blocker" class="overlay-blocker">
        <div class="text-center">
            <h3 class="text-dark">سیستم موقتاً قفل شده است.</h3>
            <p class="text-dark">لطفاً اطلاعات گذشته را بایگانی نمایید.</p>
            <button id="temporaryUnlockBtn" class="btn btn-primary mt-2">باز کردن موقت (30 ثانیه)</button>
        </div>
    </div>
}

<!-- ✅ بخش اسکریپت‌ها -->
@section ITCheckListPrint {
    @* فایل‌های خارجی *@
    <script src="~/lib/exporttableprint.js" asp-append-version="true"></script>
    <script src="~/lib/data-loading.js" asp-append-version="true"></script>

    @* اسکریپت‌های داخلی *@
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            updateShamsiDate();
            updateTimers();
            setInterval(updateTimers, 1000);
        });

        function updateShamsiDate() {
            const today = new Date();
            const shamsi = toShamsi(today);
            const weekDays = ["یک‌شنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنج‌شنبه", "جمعه", "شنبه"];
            const formatted = `${weekDays[today.getDay()]} ${shamsi.year}/${shamsi.month}/${shamsi.day}`;
            document.getElementById("shamsiDate").textContent = formatted;
        }

        function updateTimers() {
            document.querySelectorAll('[data-start]').forEach(el => {
                const start = new Date(el.dataset.start);
                if (!isNaN(start)) {
                    const diff = Math.floor((new Date() - start) / 1000);
                    const m = String(Math.floor(diff / 60)).padStart(2, '0');
                    const s = String(diff % 60).padStart(2, '0');
                    el.textContent = `${m}:${s}`;
                }
            });
        }

        function toShamsi(g) {
            // مختصر؛ می‌توان از کتابخانه استفاده کرد
            const div = (a,b)=>~~(a/b), gy=g.getFullYear()-1600, gm=g.getMonth(), gd=g.getDate()-1,
                gdm=[31,28,31,30,31,30,31,31,30,31,30,31], jdm=[31,31,31,31,31,31,30,30,30,30,30,29];
            let gdn=365*gy+div(gy+3,4)-div(gy+99,100)+div(gy+399,400);
            for(let i=0;i<gm;++i)gdn+=gdm[i]; if(gm>1&&((gy+1600)%4==0&&((gy+1600)%100!=0||(gy+1600)%400==0)))++gdn; gdn+=gd;
            let jdn=gdn-79, jnp=div(jdn,12053); jdn%=12053;
            let jy=979+33*jnp+4*div(jdn,1461); jdn%=1461;
            if(jdn>=366){jy+=div(jdn-1,365);jdn=(jdn-1)%365;}
            let jm, jd; for(jm=0;jm<11&&jdn>=jdm[jm];++jm)jdn-=jdm[jm]; jd=jdn+1;
            return {year:jy,month:String(jm+1).padStart(2,'0'),day:String(jd).padStart(2,'0')};
        }
    </script>
    <!--=================================================================-->
    <!--تابع سریع و خلاصه مخصوص جدول اطلاعات جهت  تبدیل تاریخ میلادی به شمسی-->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".shamsi-date").forEach(el => {
                const dateStr = el.dataset.date;
                if (!dateStr) return;
                const g = new Date(dateStr);
                if (isNaN(g)) return;
                const j = toShamsi(g);
                el.textContent = `${j.year}/${j.month}/${j.day}`;
            });
        });
    </script>
    <!--=================================================================-->
    <!--ثبت آیتم با نمایش SweetAlert-->
    <script>
        $(document).ready(function () {

            // دکمه افزودن و باز کردن فرم در مودال
            $('#btnAdd').click(function () {
                $.get('/Checklist/Create', function (data) {
                    $('#modalBody').html(data);
                    $('#modalForm').modal('show');
                });
            });

            // ارسال فرم به صورت Ajax
            $(document).on('submit', '#addChecklistForm', function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/Checklist/Create",
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'عملیات موفق',
                                text: response.message,
                                confirmButtonText: 'ثبت و بازگشت'
                            }).then(() => {
                                $('#modalForm').modal('hide');

                                // چون جدول Ajax نیست، از reload استفاده می‌کنیم
                                location.reload(); // 🔁 رفرش کل صفحه
                            });
                        } else {
                            Swal.fire({
                                icon: 'warning',
                                title: 'هشدار',
                                text: response.message,
                                confirmButtonText: 'باشه'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'خطا',
                            text: 'خطا در ارتباط با سرور.',
                            confirmButtonText: 'باشه'
                        });
                    }
                });
            });

        });
    </script>
    <!--=================================================================-->
    <!--ویرایش آیتم با تأیید SweetAlert-->
    <script>
        $(document).ready(function () {
            $(document).on("click", ".btn-edit", function () {
                const id = $(this).data("id");
                $.get("/Checklist/Edit/" + id, function (data) {
                    $("#modalBody").html(data);
                    $("#modalForm").modal("show");
                });
            });

            $(document).on("submit", "#editChecklistForm", function (e) {
                e.preventDefault();
                $.ajax({
                    url: "/Checklist/Edit",
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (res) {
                        if (res.success) {
                            $("#modalForm").modal("hide");
                            Swal.fire("ویرایش شد!", res.message, "success").then(() => location.reload());
                        } else {
                            Swal.fire("خطا", res.message, "error");
                        }
                    },
                    error: function () {
                        Swal.fire("خطا", "خطا در ارسال درخواست!", "error");
                    }
                });
            });
        });
    </script>
    <!--=================================================================-->
    <!--حذف آیتم با تأیید SweetAlert-->
    <script>
        $(document).on("click", ".btn-delete", function () {
            const id = $(this).data("id");

            Swal.fire({
                title: "آیا از حذف اطلاعات مطمئن هستید؟",
                text: ".بعد از حذف، اطلاعات قابل بازگشت نیست",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "بله، حذف کن",
                cancelButtonText: "انصراف"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Checklist/Delete",
                        type: "POST",
                        data: { id: id },
                        success: function (res) {
                            if (res.success) {
                                Swal.fire("حذف شد", res.message, "success").then(() => location.reload());
                            } else {
                                Swal.fire("خطا", res.message, "error");
                            }
                        },
                        error: function () {
                            Swal.fire("خطا", "مشکلی در ارتباط با سرور به وجود آمد.", "error");
                        }
                    });
                }
            });
        });
    </script>
    <!--=================================================================-->
    @* بقیه اسکریپت‌ها مثل بایگانی، حذف، تأیید، افزودن، ویرایش و ... دقیقاً مشابه کد قبلی شما،
       اما پیشنهاد می‌کنم در فایل‌های جداگانه js برای مدیریت بهتر نگه دارید. *@
}

