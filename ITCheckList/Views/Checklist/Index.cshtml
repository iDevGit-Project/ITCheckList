@model List<ITCheckList.Models.TBL_CheckItem>
@{
    ViewData["Title"] = "لیست بررسی‌های روزانه";
    var items = ViewBag.Items as List<TBL_CheckItem>;
    bool hasUnarchivedOldData = ViewBag.HasUnarchivedOldData ?? false;
}
<!-- اضافه کردن Font Awesome از CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
<!--=================================================================-->
@{
    var successMessage = TempData["SuccessMessage"] as string;
}
<!--=================================================================-->
@if (hasUnarchivedOldData)
{
    <div class="alert alert-warning text-center mt-4">
        <strong>توجه:</strong> اطلاعات 1 تا 3 روز گذشته هنوز بایگانی نشده‌اند.
    </div>
    <div class="text-center mt-3">
        <button id="archiveOldDataBtn" class="btn btn-primary">بایگانی اطلاعات قدیمی</button>
    </div>
}

<!--=================================================================-->
@if (!string.IsNullOrEmpty(successMessage))
{
    <script>
        // استفاده از Toastify برای نمایش پیام
        Toastify({
            text: "@successMessage",
            duration: 3000, // مدت زمان نمایش پیام (3 ثانیه)
            gravity: "top", // محل نمایش پیام (بالا)
            position: "right", // موقعیت پیام (راست)
            backgroundColor: "#4CAF50", // رنگ پس‌زمینه پیام (سبز برای موفقیت)
            close: true // اضافه کردن دکمه بستن
        }).showToast();
    </script>
}
<!--=================================================================-->
<div class="mt-5" id="reportSection">
    <h4 class="text-center fw-bold">مدیریت چک لیست روزانه</h4>
    <!-- نوار ابزار بالا -->
    <div class="d-flex flex-wrap justify-content-between align-items-center gap-3 my-3" dir="rtl">
        <button id="btnAdd" type="button" class="btn custom-btn btn-outline-primary">
            افزودن موضوع جدید
        </button>
        <p class="mb-0">تاریخ امروز: <span class="fw-bold" id="shamsiDate"></span></p>
    </div>

    <!-- جدول اطلاعات -->
    <table class="table table-bordered text-center align-middle responsive-table" id="reportTable" dir="rtl">
        <thead class="table-light">
            <tr>
                <th class="text-center">ردیف</th>
                <th class="text-center">بخش</th>
                <th class="text-center">موضوع</th>
                <th class="text-center">تاریخ</th>
                <th class="text-center">توضیحات</th>
                <th class="text-center">وضعیت</th>
                <th class="text-center">عملیات</th>
            </tr>
        </thead>
        <tbody>
            @if (items != null)
            {
                int i = 1;
                foreach (var item in items)
                {
                    var rowClass = "";
                    var isOldUnarchived = (DateTime.Now.Date - item.CreatedAt.Date).Days >= 1 &&
                    (DateTime.Now.Date - item.CreatedAt.Date).Days <= 3 &&
                    hasUnarchivedOldData;
                    if (isOldUnarchived)
                    {
                        rowClass = "table-warning";
                        if (!item.Status)
                        {
                            rowClass += " pending-row-highlight";
                        }
                    }
                    else
                    {
                        rowClass = item.Status ? "done-row" : "pending-row-highlight";
                    }

                    <tr class="@rowClass">
                        <td>@(i++)</td>
                        <td class="text-end">@item.Section</td>
                        <td class="text-end">@item.Description</td>

                        <!-- تبدیل به شمسی در کلاینت -->
                        <td>
                            <span class="shamsi-date" data-date="@item.CreatedAt.ToString("o")">
                                @item.CreatedAt.ToString("yyyy/MM/dd") <!-- fallback -->
                            </span>
                        </td>

                        <td class="text-end">@item.Note</td>

                        <td class="text-center">
                            <span class="d-block rounded-2 px-2 py-1 status-badge @(item.Status ? "status-done" : "status-pending blinking-badge")">
                                @(item.Status ? "انجام شد." : "در دست اقدام.")
                                @if (!item.Status)
                                {
                                    <span id="timer-@item.Id"
                                          data-start="@item.CreatedAt.ToString("o")"
                                          class="fw-bold text-dark">
                                    </span>
                                }
                            </span>
                        </td>

                        <td class="text-center">
                            @if (item.Status)
                            {
                                <span class="text-success fw-bold">موفق</span>
                            }
                            else if (!item.Status && !hasUnarchivedOldData)
                            {
                                <button class="btn btn-sm btn-outline-success btn-confirm-final" data-id="@item.Id">
                                    <i class="fas fa-check-circle fa-lg"></i>
                                </button>

                                <a asp-controller="Checklist" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning">
                                    <i class="fas fa-edit fa-lg"></i>
                                </a>

                                <button class="btn btn-sm btn-outline-danger btn-delete" data-id="@item.Id">
                                    <i class="fas fa-trash-alt fa-lg"></i>
                                </button>
                            }
                            else if (hasUnarchivedOldData)
                            {
                                <span class="text-muted">غیرفعال</span>
                            }
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

    <!--=================================================================-->
    <!-- Overlay برای قفل کردن سیستم -->
    @if (hasUnarchivedOldData)
    {
        <div id="overlay-blocker" style="position: fixed; top: 0; left: 0;
        width: 100%; height: 100%; background: rgba(255,255,255,0.9); z-index: 9999;backdrop-filter: blur(4px);
        display: flex; justify-content: center; align-items: center; flex-direction: column;">
            <div class="text-center">
                <h3 class="text-dark">سیستم به دلیل بایگانی‌نشدن اطلاعات گذشته موقتاً قفل شده است.</h3><br />
                <h5 class="text-dark">کاربرگرامی: لطفاً تا قبل از به اتمام رسیدن زمان، اطلاعات گذشته را بایگانی و ثبت نمایید.</h5>
                <button id="temporaryUnlockBtn" class="btn btn-primary mt-3">باز کردن موقت (30 ثانیه)</button>
            </div>
        </div>
    }
    <!--=================================================================-->
    <!-- دکمه دریافت خروجی -->
    <div class="text-start mt-3">
        <!-- دکمه درج در بایگانی امروز -->
        <button id="btnArchiveToday" class="btn custom-btn btn-outline-primary">ارسال گزارشات به بایگانی امروز</button>
        <button id="btnPrintTable" class="btn custom-btn btn-outline-primary">دریافت خروجی از اطلاعات</button>
    </div>
</div>
<!--=================================================================-->
<!--نمایش مودال جهت ثبت اطلاعات-->
<!-- Modal -->
<div class="modal fade" id="modalForm" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg" dir="rtl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="modalLabel">ثبت بررسی جدید</h5>
                <button type="button" class="btn-close ms-0" data-bs-dismiss="modal" aria-label="بستن"></button>
            </div>
            <div class="modal-body" id="modalBody">
                <!-- محتوای فرم داینامیک در اینجا لود خواهد شد -->
            </div>
        </div>
    </div>
</div>

<!--=================================================================-->
@section ITCheckListPrint {
    <!--فراخوانی فایل اسکریپت آنلاین -->
    <script src="https://cdn.jsdelivr.net/npm/toastify-js" asp-append-version="true"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/print-js/1.6.0/print.min.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" asp-append-version="true"></script>
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <!--=================================================================-->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت خروجی گزارش از اطلاعات-->
    <script src="~/lib/exporttableprint.js" asp-append-version="true"></script>
    <script src="~/lib/data-loading.js" asp-append-version="true"></script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت نمایش تایمر در کنار "در دست اقدام"-->
    <script>
        function updateTimers() {
            const elements = document.querySelectorAll('[id^="timer-"]');
            const now = new Date();

            elements.forEach(function (el) {
                const start = el.dataset.start;
                if (!start) return;

                const startTime = new Date(start);
                const diffInSeconds = Math.floor((now - startTime) / 1000);

                const minutes = String(Math.floor(diffInSeconds / 60)).padStart(2, '0');
                const seconds = String(diffInSeconds % 60).padStart(2, '0');

                el.textContent = `${minutes}:${seconds}`;
            });
        }

        // اجرای اولیه
        document.addEventListener("DOMContentLoaded", function () {
            updateTimers();
            setInterval(updateTimers, 1000);
        });
    </script>
    <!--=================================================================-->
    <script>
        $(document).ready(function () {
            // فرض: در حالت قفل‌شده یک متغیر سرور به View پاس داده می‌شود
            var shouldArchive = '@ViewBag.ShowArchivePrompt' === 'true';

            if (shouldArchive) {
                showArchivePromptAndExecute();
            }
        });
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت نمایش جهت بایگانی اطلاعات قدیمی"-->
    <script>
        $(document).on("click", "#archiveOldDataBtn", function () {
            Swal.fire({
                title: 'آیا مطمئن هستید؟',
                text: "اطلاعات قدیمی بایگانی خواهند شد!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'بله، بایگانی کن',
                cancelButtonText: 'انصراف'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post("/Checklist/ArchivePreviousDayData", function (res) {
                        if (res.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'موفق',
                                text: res.message,
                                timer: 2000,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire('خطا', res.message, 'error');
                        }
                    });
                }
            });
        });
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت کد آجاکس مربوط به تأیید نهایی به صورت مستقیم-->
    <script>
        $(document).ready(function () {
            $('.btn-confirm-final').click(function () {
                const id = $(this).data('id');
                const row = $(this).closest('tr');
                Swal.fire({
                    title: 'تأیید نهایی',
                    text: "آیا مطمئن هستید که این آیتم باید به وضعیت انجام‌شده تغییر یابد؟",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'بله، نهایی شود',
                    cancelButtonText: 'لغو'
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: 'در حال پردازش...',
                            text: 'لطفاً صبر کنید',
                            allowOutsideClick: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });
                        $.ajax({
                            url: '/Checklist/ConfirmFinal',
                            type: 'POST',
                            data: { id: id },
                            success: function (response) {
                                if (response.success) {
                                        Swal.fire({
                                            title: 'موفق!',
                                            text: 'وضعیت آیتم به انجام‌شده تغییر یافت.',
                                            icon: 'success',
                                            timer: 2000,
                                            showConfirmButton: false
                                        }).then(() => {
                                            location.reload(); // رفرش کامل صفحه برای دریافت اطلاعات بروز
                                        });

                                    // به‌روزرسانی UI
                                    row.find('.status-badge')
                                        .removeClass('status-pending')
                                        .addClass('status-done')
                                        .text('انجام شد.');

                                    row.find('.btn-confirm-final').remove(); // حذف دکمه
                                    row.removeClass('pending-row-highlight').addClass('done-row');

                                } else {
                                    Swal.fire('خطا', response.message, 'error');
                                }
                            },
                            error: function () {
                                Swal.fire('خطا', 'ارتباط با سرور برقرار نشد.', 'error');
                            }
                        });
                    }
                });
            });
        });
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت بررسی وضعیت روز جاری-->
    <script>
        $(document).ready(function () {
            const now = new Date();
            const hour = now.getHours();

            // فقط بین ساعت 10 تا 17 بررسی کن
            if (hour >= 11 && hour <= 17) {
                $.get('/Checklist/CheckTodayData', function (response) {
                    if (!response.hasTodayData) {
                        showDailyReminder();
                    }
                });
            }

            function showDailyReminder() {
                const reminder = $('<div>')
                    .addClass('daily-reminder warning daily-reminder-container')
                    .html('.کاربر گرامی: تا این لحظه هیچ موضوعی برای امروز ثبت نکرده‌اید')
                    .hide()
                    .fadeIn(800);

                $('body').append(reminder);

                setTimeout(() => {
                    reminder.fadeOut(1500, () => reminder.remove());
                }, 5000);
            }
        });
    </script>
    <!--=================================================================-->
    <!--قفل کردن کلی سیستم با JavaScript (Overlay Blocker)-->
    <script>
        (function () {
            var shouldLock = @hasUnarchivedOldData.ToString().ToLower();
            if (shouldLock && !sessionStorage.getItem("temporaryUnlockUsed")) {
                document.getElementById("overlay-blocker").style.display = "flex";

                document.getElementById("temporaryUnlockBtn").addEventListener("click", function () {
                    sessionStorage.setItem("temporaryUnlockUsed", "true");
                    document.getElementById("overlay-blocker").style.display = "none";

                    // بعد از 30 ثانیه دوباره قفل شود
                    setTimeout(function () {
                        document.getElementById("overlay-blocker").style.display = "flex";
                    }, 30000);
                });
            }
            else if (shouldLock) {
                document.getElementById("overlay-blocker").style.display = "flex";
            }
        })();
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت حالت چشمک زدن اطلاعات-->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const blinkingBadges = document.querySelectorAll(".blinking-badge");

            blinkingBadges.forEach(badge => {
                setInterval(() => {
                    badge.classList.toggle("dimmed");
                }, 500); // چشمک هر ۱ ثانیه
            });
        });
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت سفارشی سازی جدول-->
    <script>
        $(document).ready(function () {
            $('#reportTable').DataTable({
                paging: true,
                pageLength: 10,
                searching: true,
                ordering: true,
                language: {
                    "decimal": "",
                    "emptyTable": "هیچ داده‌ای در جدول وجود ندارد",
                    "info": "نمایش _START_ تا _END_ از _TOTAL_ رکورد",
                    "infoEmpty": "نمایش 0 تا 0 از 0 رکورد",
                    "infoFiltered": "(فیلتر شده از _MAX_ رکورد)",
                    "lengthMenu": "نمایش _MENU_ رکورد",
                    "loadingRecords": "در حال بارگذاری...",
                    "processing": "در حال پردازش...",
                    "search": "جستجو:",
                    "zeroRecords": "رکوردی مطابق با جستجوی شما یافت نشد",
                    "paginate": {
                        "first": "اولین",
                        "last": "آخرین",
                        "next": "بعدی",
                        "previous": "قبلی"
                    },
                    "aria": {
                        "sortAscending": ": فعال‌سازی مرتب‌سازی صعودی",
                        "sortDescending": ": فعال‌سازی مرتب‌سازی نزولی"
                    }
                }
            });
        });
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت عدم نمایش چاپ-->
    <script>
        document.getElementById("btnPrintTable")?.addEventListener("click", function () {
            fetch('/Checklist/IsCheckItemTableEmpty')
                .then(res => res.ok ? res.json() : Promise.reject("خطا در دریافت وضعیت جدول"))
                .then(data => {
                    if (data.isEmpty) {
                        Swal.fire({
                            icon: 'error',
                            title: '...داده ای یافت نشد',
                            html: '<div style="direction: rtl;">هیچ داده‌ای برای چاپ موجود نیست.</div>',
                            confirmButtonText: 'متوجه شدم',
                            customClass: {
                                confirmButton: 'btn btn-success',
                            },
                        });
                    } else {
                        printFullTable();
                    }
                })
                .catch(err => {
                    Swal.fire({
                        icon: 'error',
                        title: 'خطا!',
                        html: `<div style="direction: rtl;">${err}</div>`,
                        confirmButtonText: 'بازگشت'
                    });
                });
        });
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت بایگانی داده های روز جاری-->
    <script>
        document.getElementById("btnArchiveToday")?.addEventListener("click", function () {
            fetch('/Checklist/IsCheckItemTableEmpty')
                .then(res => res.ok ? res.json() : Promise.reject('خطا در بررسی وضعیت جدول.'))
                .then(data => {
                    if (data.isEmpty) {
                        Swal.fire({
                            icon: 'error',
                            title: 'هشدار!',
                            html: '<div style="direction: rtl;">هیچ گزارشی جهت ارسال به بایگانی امروز وجود ندارد.</div>',
                            confirmButtonText: 'متوجه شدم',
                            customClass: {
                                confirmButton: 'btn btn-success',
                            },
                        });
                    } else {
                        fetch('/Checklist/HasPendingItems')
                            .then(res => res.json())
                            .then(pending => {
                                if (pending.hasPending) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: '!...هشدار',
                                        html: `
                                        <div class="custom-alert-content">
                                        برخی موارد در وضعیت "در دست اقدام" یا "در دست بررسی" هستند. جهت ثبت، ابتدا همه را به وضعیت "انجام شد" تغییر دهید.
                                        </div>`,
                                            confirmButtonText: 'متوجه شدم',
                                            customClass: {
                                                popup: 'custom-swal-width',
                                                confirmButton: 'btn custom-btn btn-outline-primary',
                                            },
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'پاک‌سازی پس از بایگانی؟',
                                        html: '<div style="direction: rtl;">آیا پس از بایگانی، اطلاعات پاک شوند؟</div>',
                                        icon: 'question',
                                        showDenyButton: true,
                                        showCancelButton: true,
                                        confirmButtonText: 'بله، پاک شود',
                                        denyButtonText: 'خیر، فقط بایگانی شود',
                                        cancelButtonText: 'لغو عملیات',
                                        customClass: {
                                            popup: 'swal2-rtl',
                                            confirmButton: 'btn custom-btn btn-outline-primary',
                                            denyButton: 'btn custom-btn btn-outline-primary',
                                            cancelButton: 'btn custom-btn btn-outline-primary'
                                        },
                                        buttonsStyling: false
                                    }).then(result => {
                                        if (result.isConfirmed) archiveToday(true);
                                        else if (result.isDenied) archiveToday(false);
                                    });
                                }
                            });
                    }
                })
                .catch(err => {
                    Swal.fire({
                        icon: 'error',
                        title: 'خطا!',
                        html: `<div style="direction: rtl;">${err}</div>`,
                            confirmButtonText: 'متوجه شدم',
                            customClass: {
                                confirmButton: 'btn custom-btn btn-outline-primary',
                            },
                    });
                });
        });
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت حذف اطلاعات جدول بعد از بایگانی داده های روز جاری-->
    <script>
        function archiveToday(deleteAfter) {
            fetch(`/Checklist/ArchiveToday?deleteAfterArchive=${deleteAfter}`, {
                method: 'POST'
            })
            .then(res => res.ok ? res.text() : res.text().then(text => Promise.reject(text)))
            .then(msg => {
                Swal.fire({
                    icon: 'success',
                    title: 'موفق!',
                    html: `<div style="direction: rtl;">${msg}</div>`,
                            confirmButtonText: 'قبول و بازگشت',
                            customClass: {
                                confirmButton: 'btn custom-btn btn-outline-primary',
                            },
                }).then(() => location.reload());
            })
            .catch(err => {
                Swal.fire({
                    icon: 'error',
                    title: 'خطا!',
                    html: `<div style="direction: rtl;">${err}</div>`,
                            confirmButtonText: 'متوجه شدم',
                            customClass: {
                                confirmButton: 'btn custom-btn btn-outline-primary',
                            },
                });
            });
        }
    </script>
    <!--=================================================================-->
    <!--فراخوانی اسکریپت نمایش بنر مربوط به موفقیت آمیز بودن اطلاعات-->
    <script>
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            if (successMessage) {
                toastr.success(successMessage, 'عملیات موفقیت‌آمیز', {
                    timeOut: 1800,
                    closeButton: true,
                    progressBar: true,
                    positionClass: 'toast-top-center',
                    toastClass: 'custom-toast-success'
                });
            }
        });
    </script>
    <!--=================================================================-->
    <!--تابع کامل تبدیل تاریخ میلادی به شمسی-->
    <script>
        function toShamsi(gDate) {
            const g_y = gDate.getFullYear(), g_m = gDate.getMonth() + 1, g_d = gDate.getDate();
            const g_days_in_month = [31,28,31,30,31,30,31,31,30,31,30,31];
            const j_days_in_month = [31,31,31,31,31,31,30,30,30,30,30,29];
            const div = (a, b) => Math.floor(a / b);

            let gy = g_y - 1600, gm = g_m - 1, gd = g_d - 1;
            let g_day_no = 365 * gy + div((gy + 3), 4) - div((gy + 99), 100) + div((gy + 399), 400);
            for (let i = 0; i < gm; ++i) g_day_no += g_days_in_month[i];
            if (gm > 1 && ((gy % 4 == 0 && gy % 100 != 0) || (gy % 400 == 0))) ++g_day_no;
            g_day_no += gd;

            let j_day_no = g_day_no - 79;
            let j_np = div(j_day_no, 12053); j_day_no %= 12053;
            let jy = 979 + 33 * j_np + 4 * div(j_day_no, 1461); j_day_no %= 1461;
            if (j_day_no >= 366) {
                jy += div((j_day_no - 1), 365);
                j_day_no = (j_day_no - 1) % 365;
            }

            let jm, jd;
            for (var i = 0; i < 11 && j_day_no >= j_days_in_month[i]; ++i) j_day_no -= j_days_in_month[i];
            jm = i + 1; jd = j_day_no + 1;

            return { year: jy, month: jm.toString().padStart(2, '0'), day: jd.toString().padStart(2, '0') };
        }
        const weekDays = ["یک‌شنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنج‌شنبه", "جمعه", "شنبه"];
        document.addEventListener("DOMContentLoaded", function () {
            const today = new Date(), shamsi = toShamsi(today);
            const formattedDate = `${weekDays[today.getDay()]} ${shamsi.year}/${shamsi.month}/${shamsi.day}`;
            document.getElementById("shamsiDate").innerText = formattedDate;
        });
    </script>
    <!--=================================================================-->
    <!--تابع سریع و خلاصه مخصوص جدول اطلاعات جهت  تبدیل تاریخ میلادی به شمسی-->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".shamsi-date").forEach(el => {
                const dateStr = el.dataset.date;
                if (!dateStr) return;
                const g = new Date(dateStr);
                if (isNaN(g)) return;
                const j = toShamsi(g);
                el.textContent = `${j.year}/${j.month}/${j.day}`;
            });
        });
    </script>
    <!--=================================================================-->
    <!--ثبت آیتم با نمایش SweetAlert-->
    <script>
        $(document).ready(function () {

            // دکمه افزودن و باز کردن فرم در مودال
            $('#btnAdd').click(function () {
                $.get('/Checklist/Create', function (data) {
                    $('#modalBody').html(data);
                    $('#modalForm').modal('show');
                });
            });

            // ارسال فرم به صورت Ajax
            $(document).on('submit', '#addChecklistForm', function (e) {
                e.preventDefault();
                $.ajax({
                    type: "POST",
                    url: "/Checklist/Create",
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'عملیات موفق',
                                text: response.message,
                                confirmButtonText: 'ثبت و بازگشت'
                            }).then(() => {
                                $('#modalForm').modal('hide');

                                // چون جدول Ajax نیست، از reload استفاده می‌کنیم
                                location.reload(); // 🔁 رفرش کل صفحه
                            });
                        } else {
                            Swal.fire({
                                icon: 'warning',
                                title: 'هشدار',
                                text: response.message,
                                confirmButtonText: 'باشه'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'خطا',
                            text: 'خطا در ارتباط با سرور.',
                            confirmButtonText: 'باشه'
                        });
                    }
                });
            });

        });
    </script>
    <!--=================================================================-->
    <!--ویرایش آیتم با تأیید SweetAlert-->
    <script>
        $(document).ready(function () {
            $(document).on("click", ".btn-edit", function () {
                const id = $(this).data("id");
                $.get("/Checklist/Edit/" + id, function (data) {
                    $("#modalBody").html(data);
                    $("#modalForm").modal("show");
                });
            });

            $(document).on("submit", "#editChecklistForm", function (e) {
                e.preventDefault();
                $.ajax({
                    url: "/Checklist/Edit",
                    type: "POST",
                    data: $(this).serialize(),
                    success: function (res) {
                        if (res.success) {
                            $("#modalForm").modal("hide");
                            Swal.fire("ویرایش شد!", res.message, "success").then(() => location.reload());
                        } else {
                            Swal.fire("خطا", res.message, "error");
                        }
                    },
                    error: function () {
                        Swal.fire("خطا", "خطا در ارسال درخواست!", "error");
                    }
                });
            });
        });
    </script>
    <!--=================================================================-->
    <!--حذف آیتم با تأیید SweetAlert-->
    <script>
        $(document).on("click", ".btn-delete", function () {
            const id = $(this).data("id");

            Swal.fire({
                title: "آیا از حذف اطلاعات مطمئن هستید؟",
                text: ".بعد از حذف، اطلاعات قابل بازگشت نیست",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "بله، حذف کن",
                cancelButtonText: "انصراف"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/Checklist/Delete",
                        type: "POST",
                        data: { id: id },
                        success: function (res) {
                            if (res.success) {
                                Swal.fire("حذف شد", res.message, "success").then(() => location.reload());
                            } else {
                                Swal.fire("خطا", res.message, "error");
                            }
                        },
                        error: function () {
                            Swal.fire("خطا", "مشکلی در ارتباط با سرور به وجود آمد.", "error");
                        }
                    });
                }
            });
        });
        // $(document).on("click", ".btn-delete", function () {
        //     const id = $(this).data("id");
        //     Swal.fire({
        //         title: "آیا از حذف اطلاعات مطمئن هستید؟",
        //         text: ".بعد از حذف، اطلاعات قابل بازگشت نیست",
        //         icon: "warning",
        //         showCancelButton: true,
        //         confirmButtonText: "بله، حذف کن",
        //         cancelButtonText: "انصراف"
        //     }).then((result) => {
        //         if (result.isConfirmed) {
        //             $.post("/Checklist/Delete/" + id, function (res) {
        //                 if (res.success) {
        //                     Swal.fire("حذف شد", res.message, "success").then(() => location.reload());
        //                 } else {
        //                     Swal.fire("خطا", res.message, "error");
        //                 }
        //             });
        //         }
        //     });
        // });
    </script>
    <!--=================================================================-->
}